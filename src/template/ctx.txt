# ctx - Collaborative Memory for Humans and LLMs

## What is ctx?
ctx is a version-controlled collaborative thinking system where ideas evolve through commits, branch into experiments, and merge across different minds (human and AI). 

Not a knowledge base, but a living memory that travels between LLM sessions.

## Key Problems We Solve
- **LLM Amnesia**: Every new session starts from zero
- **Lost Context**: Valuable conversations vanish when the window closes  
- **Linear Thinking**: Can't branch conversations or explore alternatives
- **Fragmented Memory**: Context scattered across different tools

## How It Works
ctx works like git, but for thoughts and ideas instead of code:
- **Commits** represent crystallized thoughts or decisions
- **Branches** are alternative explorations of a concept  
- **Merges** combine successful idea threads
- **History** preserves the evolution of thinking

## Available Commands

### Repository Management
```bash
ctx init                    # Initialize a new ctx repository
ctx status                  # Show current branch and repository status
```

### Branch Operations  
```bash
ctx branch <name>           # Create and switch to a new idea branch
```

### Merging Ideas
```bash
ctx merge <branch>          # Merge ideas from another branch
ctx merge <branch> --preview # Preview what would be merged
ctx merge <branch> --target <branch> # Merge into specific target branch
```

## Workflow Examples

### Starting a New Project
```bash
ctx init                    # Initialize repository
# Edit ctx/ctx.txt and ctx/goals.txt with your context
ctx branch "explore-idea-x" # Create branch for new exploration
# Work on your ideas, commit changes with git
ctx merge "explore-idea-x" --preview # See what would merge
ctx merge "explore-idea-x"  # Merge successful ideas back
```

### Collaborative Thinking
```bash
ctx status                  # See current state
ctx branch "alternative-approach" # Explore different direction  
# Document findings, commit progress
ctx merge "alternative-approach" --preview # Review before merging
```

## Conventions

### Branch Naming
- Use descriptive names: `bias-detection-approach`, `performance-optimization`
- Separate words with hyphens for readability

### Commit Strategy  
- Commit early and often to preserve thinking evolution
- Use clear commit messages that capture the insight or decision

### File Organization
- Keep files focused and readable for both humans and LLMs
- Use descriptive filenames that capture the content purpose
- Aim to keep total repository size manageable for LLM context

### Merging Protocol
- Always preview merges first with `--preview` flag
- Main branch represents the current consensus/truth
- Feature branches are for exploration and experimentation
- Resolve conflicts thoughtfully, preserving valuable insights from both sides

## Technical Notes
- ctx repositories are standard git repositories with additional tooling
- All git commands work normally within the ctx/ directory
- Files are stored as plain text for maximum compatibility
- Repository state travels with the ctx/ directory

This file (ctx.txt) provides global context and should not be modified during normal usage.
